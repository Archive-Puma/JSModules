#!/usr/bin/env node
const Brainfuck = require('../src/brainook');

const exec = require('child_process').exec;
const args = process.argv.slice(2);

var mode = 0;
var isFile = false;

while (args.length) {
  var arg = args.shift();
  switch (arg) {
    case '-h':
    case '--help':
      console.error('\n\x1b[1mUsage\x1b[0m: brainook [-OB] -f FILE\n'
        + '\n'
        + '\x1b[1mOptions\x1b[0m:\n'
        + '  -h, --help             Output help information\n'
        + '  -f FILE, --file FILE   Read the code from a file\n\n'

        + '  -O, --to-ook           Brainfuck to Ook! conversion\n'
        + '  -B, --to-brainfuck     Ook! to Brainfuck conversion\n'
      );
      process.exit(1);
      break;
    case '-O':
    case '--to-ook':
      mode = 1;
      break;
    case '-B':
    case '--to-brainfuck':
      mode = 2;
      break;
    case '-f':
    case '--file':
      isFile = true;
      arg = args.shift();
      var file = arg;
      break;
  }
}

if (mode === 1 || mode === 2) {
  if (isFile) {
    console.debug((mode === 1) ? '\n\x1b[7mConverting Brainfuck code to Ook! code\x1b[0m\n' : '\n\x1b[7mConverting Ook! code to Brainfuck code\x1b[0m\n');
    console.debug('\n\x1b[2mOutput:\x1b[0m\n');
    exec('cat ' + file, function (error, stdout) {
      console.log((mode === 1) ? stdout.toOok() : stdout.toBrainfuck());
    });
  } else {
    console.error('\n\x1b[7mYou should specify a file!\x1b[0m\n');
  }
} else console.error('\n\x1b[7mYou should specify a converison mode!\x1b[0m\n');